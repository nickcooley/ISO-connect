<?php

/**
 * TODO handle mysqli prepare errors
 * @file
 * Get voices by channel
 */

require_once($_SERVER['DOCUMENT_ROOT'] . '/config/main.conf.php');
require($_SERVER['DOCUMENT_ROOT'] . '/lib/helpers.php');

check_required_get_params(array('cid' => 'numeric'));

if ($_GET['cid'] == 0 || (isset($_GET['filter']) && $_GET['filter'] == 'attendees')) {
	$cache_time_secs = 120;
}
else {
	$cache_time_secs = 30;
}

$do_cache = TRUE;
if ($do_cache) {
	$attendee = (isset($_GET['filter']) && $_GET['filter'] == 'attendees') ? '-attendees' : '';
	$root = $_SERVER['DOCUMENT_ROOT'];
	$cachefile = $root . '/cache/' . basename($_SERVER['PHP_SELF'], '.php');
	$cachefile .=  ".chan-{$_GET['cid']}{$attendee}.cache";
	clearstatcache();
	if (file_exists($cachefile) && filemtime($cachefile) > time() - $cache_time_secs) { // good to serve!
		include($cachefile);
		exit;
	}
	ob_start();
}

$mysqli = new mysqli(DBHOST, DBUSER, DBPASS, DB);
if (mysqli_connect_error()) {
	$message = 'database error ' . mysqli_connect_errno() . ': ' . mysqli_connect_error();
	die(json_encode(array('success' => FALSE, 'code' => 10, 'message' => $message)));
}

$users = array();

$chanzero_op = ($_GET['cid'] == 0) ? 'OR' : 'AND';
$chanzero = ($_GET['cid'] == 0) ? 'OR screen_name IN (SELECT screen_name FROM attendee) ' : '';

if (isset($_GET['filter']) && $_GET['filter'] == 'attendees') {
	$stmt = $mysqli->prepare('SELECT status.screen_name, profile_image_url, COUNT(status.screen_name) as qty FROM status
		INNER JOIN status_channel ON status.id = status_channel.status_id
		WHERE status_channel.channel_id = ? ' . $chanzero_op . ' status.screen_name IN (SELECT screen_name FROM attendee)
		GROUP BY screen_name ORDER BY qty DESC LIMIT 50');
}
else {
	$stmt = $mysqli->prepare('SELECT screen_name, profile_image_url, COUNT(screen_name) as qty FROM status
		INNER JOIN status_channel ON status.id = status_channel.status_id
		WHERE status_channel.channel_id = ? ' . $chanzero . '
		GROUP BY screen_name
		ORDER BY qty DESC LIMIT 50');
}
$stmt->bind_param('i', $_GET['cid']);
$stmt->execute();
$stmt->bind_result($screen_name, $profile_image_url, $qty);
$i = 1;
while ($stmt->fetch()) {
	$users[] = array(
		'ranking' => $i,
		'num_tweets_in_chan' => $qty,
		'screen_name' => $screen_name,
		'profile_image_url' => $profile_image_url,
	);
	$i++;
}
$stmt->close();

$return_array = array('users' => $users);
print to_json($return_array);

if ($do_cache) {
	$contents = ob_get_contents();
	ob_end_clean();

	$handle = fopen($cachefile, 'w');
	fwrite($handle, $contents);
	fclose($handle);

	include($cachefile);
}
?>
